; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\fxas21002c.o --depend=.\objects\fxas21002c.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -ID:\ele\STM\STM32F103\Projects\SPI_REG\RTE -ID:\ele\STM\STM32F103\Projects\SPI_REG\RTE\Device\STM32F103C8 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.0.0\Device\Include -D__UVISION_VERSION=518 -D_RTE_ -DSTM32F10X_MD --omf_browse=.\objects\fxas21002c.crf fxas21002c.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.GetAngle||, CODE, READONLY, ALIGN=2

GetAngle PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r2
        MOV      r6,r1
        BL       __aeabi_f2d
        MOV      r4,r0
        MOV      r7,r1
        MOV      r1,r5
        MOV      r0,r6
        BL       __aeabi_fadd
        BL       __aeabi_f2d
        MOV      r2,#0xffffffff
        BL       __ARM_scalbn
        MOV      r3,r7
        MOV      r2,r4
        BL       __aeabi_dmul
        BL       __aeabi_d2f
        LDR      r4,|L1.64|
        MOV      r1,r0
        LDR      r0,[r4,#8]  ; angle_new
        BL       __aeabi_fadd
        STR      r0,[r4,#8]  ; angle_new
        POP      {r4-r8,pc}
        ENDP

|L1.64|
        DCD      ||.data||

        AREA ||i.GyroCalibrate||, CODE, READONLY, ALIGN=2

GyroCalibrate PROC
        PUSH     {r4-r6,lr}
        LDR      r6,|L2.84|
        MOVS     r5,#0
        SUB      r4,r6,#0x10
        NOP      
|L2.12|
        BL       GyroReadData
        LDRH     r0,[r6,#0]  ; raw
        LDRH     r1,[r4,#0]  ; cal_x
        ADDS     r5,r5,#1
        ADD      r0,r0,r1
        STRH     r0,[r4,#0]
        LDRH     r0,[r6,#2]  ; raw
        LDRH     r1,[r4,#2]  ; cal_y
        UXTB     r5,r5
        ADD      r0,r0,r1
        STRH     r0,[r4,#2]
        LDRH     r0,[r6,#4]  ; raw
        LDRH     r1,[r4,#4]  ; cal_z
        CMP      r5,#0x64
        ADD      r0,r0,r1
        STRH     r0,[r4,#4]
        BCC      |L2.12|
        LDRSH    r1,[r4,#0]  ; cal_x
        MOVS     r0,#0x64
        SDIV     r1,r1,r0
        STRH     r1,[r4,#0]
        LDRSH    r1,[r4,#2]  ; cal_y
        SDIV     r1,r1,r0
        STRH     r1,[r4,#2]
        LDRSH    r1,[r4,#4]  ; cal_z
        SDIV     r0,r1,r0
        STRH     r0,[r4,#4]
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L2.84|
        DCD      ||.data||+0x10

        AREA ||i.GyroReadData||, CODE, READONLY, ALIGN=2

GyroReadData PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L3.80|
        LDR      r5,|L3.84|
        MOVS     r1,#6
        LDR      r0,[r4,#8]  ; angle
        STR      r0,[r5,#0xc]  ; post_z
        MOVS     r0,#1
        BL       SpiTransmit
        LDR      r0,|L3.88|
        LDRH     r1,[r0,#0]  ; SpiRxBuffer
        REV16    r1,r1
        SBFX     r2,r1,#2,#14
        ADD      r1,r5,#0x10
        STRH     r2,[r1,#0]
        LDRH     r2,[r0,#2]  ; SpiRxBuffer
        REV16    r2,r2
        SBFX     r2,r2,#2,#14
        STRH     r2,[r1,#2]
        LDRH     r0,[r0,#4]  ; SpiRxBuffer
        REV16    r0,r0
        SBFX     r0,r0,#2,#14
        STRH     r0,[r1,#4]
        LDRSH    r1,[r5,#4]  ; cal_z
        SUBS     r0,r0,r1
        BL       __aeabi_i2d
        MVN      r2,#6
        BL       __ARM_scalbn
        BL       __aeabi_d2f
        STR      r0,[r4,#8]  ; angle
        POP      {r4-r6,pc}
        ENDP

|L3.80|
        DCD      ||.bss||
|L3.84|
        DCD      ||.data||
|L3.88|
        DCD      SpiRxBuffer

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

angle
        %        12

        AREA ||area_number.6||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.6||, ||.bss||
x_pri
        %        12

        AREA ||area_number.7||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.7||, ||.bss||
x_post
        %        12

        AREA ||area_number.8||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.8||, ||.bss||
v_pri
        %        12

        AREA ||area_number.9||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.9||, ||.bss||
v_post
        %        12

        AREA ||area_number.10||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.10||, ||.bss||
alfa
        %        12

        AREA ||area_number.11||, DATA, NOINIT, ALIGN=2

        EXPORTAS ||area_number.11||, ||.bss||
beta
        %        12

        AREA ||.data||, DATA, ALIGN=2

cal_x
        DCB      0x00,0x00
cal_y
        DCB      0x00,0x00
cal_z
        DCB      0x00,0x00,0x00,0x00
angle_new
        DCD      0x00000000
post_z
        DCD      0x00000000
||raw||
        DCD      0x00000000
        DCB      0x00,0x00

        AREA ||area_number.14||, DATA, ALIGN=2

        EXPORTAS ||area_number.14||, ||.data||
||R0||
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "fxas21002c.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_fxas21002c_c_8635f67c____REV16|
#line 388 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_fxas21002c_c_8635f67c____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_fxas21002c_c_8635f67c____REVSH|
#line 402
|__asm___12_fxas21002c_c_8635f67c____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_fxas21002c_c_8635f67c____RRX|
#line 587
|__asm___12_fxas21002c_c_8635f67c____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT GetAngle [CODE]
        EXPORT GyroCalibrate [CODE]
        EXPORT GyroReadData [CODE]
        EXPORT angle [DATA,SIZE=12]
        EXPORT x_pri [DATA,SIZE=12]
        EXPORT x_post [DATA,SIZE=12]
        EXPORT v_pri [DATA,SIZE=12]
        EXPORT v_post [DATA,SIZE=12]
        EXPORT alfa [DATA,SIZE=12]
        EXPORT beta [DATA,SIZE=12]
        EXPORT cal_x [DATA,SIZE=2]
        EXPORT cal_y [DATA,SIZE=2]
        EXPORT cal_z [DATA,SIZE=2]
        EXPORT angle_new [DATA,SIZE=4]
        EXPORT post_z [DATA,SIZE=4]
        EXPORT ||raw|| [DATA,SIZE=6]
        EXPORT ||R0|| [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SpiTransmit [CODE]
        IMPORT __aeabi_i2d [CODE]
        IMPORT __ARM_scalbn [CODE]
        IMPORT __aeabi_d2f [CODE]
        IMPORT SpiRxBuffer [DATA]
        IMPORT __aeabi_f2d [CODE]
        IMPORT __aeabi_fadd [CODE]
        IMPORT __aeabi_dmul [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
